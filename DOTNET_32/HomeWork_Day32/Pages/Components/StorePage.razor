@page "/store/{id?}"
@inject HttpClient _httpClient
@inject ProductService ProductService
@using System.Text.Json

<div class="container mt-5">
    <h2 class="mb-4">@PageTitle</h2>
    
    @if (StoreData != null)
    {
        <form>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <input type="text" class="form-control" id="name" @bind="@StoreData.Name" placeholder="Enter store name">
            </div>
            <div class="mb-3">
                <label for="alias" class="form-label">Alias:</label>
                <input type="text" class="form-control" id="alias" @bind="@StoreData.Alias" placeholder="Enter alias">
            </div>
            <div class="mb-3">
                <label for="latitude" class="form-label">Latitude:</label>
                <input type="text" class="form-control" id="latitude" @bind="@StoreData.Latitude"  placeholder="Enter latitude">
            </div>
            <div class="mb-3">
                <label for="longitude" class="form-label">Longitude:</label>
                <input type="text" class="form-control" id="longitude" @bind="@StoreData.Longitude" placeholder="Enter longitude">
            </div>
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label>
                <textarea class="form-control" id="description" @bind="@StoreData.Description" rows="3" placeholder="Enter description"></textarea>
            </div>
            <div class="mb-3">
                <label for="imageUrl" class="form-label">Image URL:</label>
                <input type="text" class="form-control" id="imageUrl" @bind="@StoreData.ImageUrl" placeholder="Enter image URL">
            </div>
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="deleted" @bind="@StoreData.IsDeleted">
                <label class="form-check-label" for="deleted">Deleted</label>
            </div>
            <button type="button" class="btn btn-primary" @onclick="SaveStore">Submit</button>
            <button type="reset" class="btn btn-secondary">Cancel</button>
        </form>
    }
    else
    {
        <p>Loading store data...</p>
    }
</div>

@code {
    [Parameter] public string Id { get; set; }
    public Store StoreData { get; set; } = new Store();
    private string PageTitle = "Create New Store";

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Id))
        {
            PageTitle = "Edit Store";

            try
            {
                StoreData = await ProductService.GetStoreById(int.Parse(Id)) ?? new Store();

                Console.WriteLine($"StoreData Loaded: {JsonSerializer.Serialize(StoreData)}");

                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error loading store: {ex.Message}");
            }
        }
    }

    private async Task SaveStore()
    {
        bool success = await ProductService.SaveStore(StoreData);
        if (success)
        {
            Console.WriteLine("Store saved successfully.");
        }
        else
        {
            Console.WriteLine("Failed to save store.");
        }
    }
}
