<div class="modal fade" id="modalId" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog"
    aria-labelledby="modalTitleId" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
        <div class="modal-content modal-xl">
            <div class="modal-header">
                <h5 class="modal-title fw-bolder" id="modalTitleId">
                    @modalAction Money
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Amount</label>
                    <input type="number" class="form-control" @bind="value" placeholder="Enter amount" min="0"
                        step="0.01" />
                    @if (showError)
                    {
                        <div class="text-danger mt-1">Amount must be a positive number.</div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    Close
                </button>
                <button type="button" class="btn btn-primary" @onclick="Submit">
                    Save
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? modalAction { get; set; }

    [Parameter]
    public EventCallback<WalletVM> OnTransactionAdded { get; set; }

    private string value { get; set; } = "";
    private bool showError = false;

    private void Submit()
    {
        if (double.TryParse(value, out double amount))
        {
            if (amount <= 0)
            {
                showError = true;
                return;
            }

            var transaction = new WalletVM
                {
                    Type = modalAction,
                    Amount = amount,
                    Date = DateTime.Now
                };

            OnTransactionAdded.InvokeAsync(transaction);


            value = string.Empty;
            showError = false;
        }
        else
        {
            showError = true;
            Console.WriteLine("Invalid amount entered");
        }
    }
}
